---
services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: always
    command:
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --certificatesresolvers.myresolver.acme.dnschallenge=true
      - --certificatesresolvers.myresolver.acme.dnschallenge.provider=gandiv5
      - --certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --accesslog=true
      - --accesslog.filepath=/var/log/access.log
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443
    environment:
      - GANDIV5_API_KEY=${GANDIV5_API_KEY}
    volumes:
      - ./letsencrypt:/letsencrypt:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 0.0.0.0:8080:8080 # qbittorrent
      - 0.0.0.0:8989:8989 # Sonarr
      - 0.0.0.0:9696:9696 # Prowlarr
      - 0.0.0.0:7878:7878 # Radarr
      - 0.0.0.0:8191:8191 # Flaresolverr
      - 0.0.0.0:8042:8042 # Joal
    volumes:
      - ./gluetun-config:/gluetun:rw
      - ./gluetun-config/wireguard:/gluetun/wireguard:ro
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - TZ=${TZ}
    restart: always
    labels:
      - "traefik.enable=true"
      # qbittorrent
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent${SUBDOMAIN}`)"
      - "traefik.http.routers.qbittorrent.entryPoints=websecure"
      - "traefik.http.routers.qbittorrent.service=qbittorrent"
      - "traefik.http.routers.qbittorrent.tls.certresolver=myresolver"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
      # Sonarr
      - "traefik.http.routers.sonarr.rule=Host(`sonarr${SUBDOMAIN}`)"
      - "traefik.http.routers.sonarr.entryPoints=websecure"
      - "traefik.http.routers.sonarr.service=sonarr"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      # Prowlarr
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr${SUBDOMAIN}`)"
      - "traefik.http.routers.prowlarr.entryPoints=websecure"
      - "traefik.http.routers.prowlarr.service=prowlarr"
      - "traefik.http.routers.prowlarr.tls.certresolver=myresolver"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      # Radarr
      - "traefik.http.routers.radarr.rule=Host(`radarr${SUBDOMAIN}`)"
      - "traefik.http.routers.radarr.entryPoints=websecure"
      - "traefik.http.routers.radarr.service=radarr"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    depends_on:
      - traefik
    dns:
      - "1.0.0.1"
      - "1.1.1.1"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./radarr-config:/config:rw
      - ${MEDIA_DIR}:/media:rw
      - ${DOWNLOAD_DIR}:/downloads:rw
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    restart: always

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./sonarr-config:/config:rw
      - ${MEDIA_DIR}:/media:rw
      - ${DOWNLOAD_DIR}:/downloads:rw
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    restart: always

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./prowlarr-config:/config:rw
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    restart: always

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent-config:/config:rw
      - ${DOWNLOAD_DIR}:/downloads:rw
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    restart: always

  flaresolverr:
    image: 21hsmw/flaresolverr:nodriver
    #image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - DRIVER=nodriver
      - TZ=${TZ}
      - LOG_HTML=true
      - LANG=fr_FR
      - BROWSER_TIMEOUT=80000
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    restart: always

#  joal:
#    image: anthonyraymond/joal:2.1.36
#    container_name: joal
#    volumes:
#      - ./joal/resources:/data
#    command: ["--joal-conf=/data", "--spring.main.web-environment=true", "--server.port=8042", "--joal.ui.path.prefix=joal", "--joal.ui.secret-token=joal"]
#    network_mode: "service:gluetun"
#    depends_on:
#      - gluetun
#    restart: always

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - TZ=${TZ}
    ports:
      - 0.0.0.0:5056:5055
    volumes:
      - ./jellyseerr-config:/app/config
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr${SUBDOMAIN}`,`jellyseerr.internal.${SUBDOMAIN}`)"
      - "traefik.http.routers.jellyseerr.entryPoints=websecure"
      - "traefik.http.routers.jellyseerr.service=jellyseerr"
      - "traefik.http.routers.jellyseerr.tls.certresolver=myresolver"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"

